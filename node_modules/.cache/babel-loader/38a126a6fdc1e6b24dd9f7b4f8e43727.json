{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhananjay srinivas\\\\Desktop\\\\REACT\\\\Router-demo\\\\src\\\\components\\\\comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../hooks/use-http';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { getAllComments } from '../../components/lib/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comments = () => {\n  _s();\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedCo\n  } = useHttp(getAllComments);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      qouteId: params.qouteId,\n      onAddcomment: addedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Comments...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Comments, \"mmye6AdCtd44veuvGBvr9mE3TgA=\", false, function () {\n  return [useParams, useHttp];\n});\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Dhananjay srinivas/Desktop/REACT/Router-demo/src/components/comments/Comments.js"],"names":["useState","useParams","useHttp","classes","NewCommentForm","getAllComments","Comments","isAddingComment","setIsAddingComment","params","sendRequest","status","data","loadedCo","startAddCommentHandler","addedCommentHandler","comments","qouteId"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,cAAR,QAA6B,0BAA7B;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACF,QAAMS,MAAM,GAAGR,SAAS,EAAxB;AACC,QAAK;AAACS,IAAAA,WAAD;AAAeC,IAAAA,MAAf;AAAuBC,IAAAA,IAAI,EAACC;AAA5B,MAAwCX,OAAO,CAACG,cAAD,CAApD;;AACC,QAAMS,sBAAsB,GAAG,MAAM;AACnCN,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAFD;;AAGA,QAAMO,mBAAmB,GAAC,MAAI,CAE7B,CAFD;;AAGA,sBACE;AAAS,IAAA,SAAS,EAAEZ,OAAO,CAACa,QAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACT,eAAD,iBACC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEO,sBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOGP,eAAe,iBAAI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEE,MAAM,CAACQ,OAAhC;AAA0C,MAAA,YAAY,EAAEF;AAAxD;AAAA;AAAA;AAAA;AAAA,YAPtB,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtBD;;GAAMT,Q;UAESL,S,EAC+BC,O;;;KAHxCI,Q;AAwBN,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../hooks/use-http';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport {getAllComments }from '../../components/lib/api'\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\nconst params = useParams();\n const{sendRequest , status, data:loadedCo }= useHttp(getAllComments);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  const addedCommentHandler=()=>{\n\n  };\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm qouteId={params.qouteId}  onAddcomment={addedCommentHandler}  />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}