{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhananjay srinivas\\\\Desktop\\\\REACT\\\\Router-demo\\\\src\\\\pages\\\\AllQuotes.js\",\n    _s = $RefreshSig$();\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../components/hooks/use-http\";\nimport { getAllQuotes } from \"../components/lib/api\";\nimport { useEffect } from \"react\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Dhanu\",\n  text: \"learning React is fun!\"\n}, {\n  id: \"q2\",\n  author: \"Chandu\",\n  text: \"learning React is great!\"\n}, {\n  id: \"q3\",\n  author: \"Ullas\",\n  text: \"learning React is love!\"\n}];\n\nconst AllQuotes = () => {\n  _s();\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (status === 'completed') return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: DUMMY_QUOTES\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AllQuotes, \"xmzqdF0SAq1bnsS9hD1yci6YQlY=\", false, function () {\n  return [useHttp];\n});\n\n_c = AllQuotes;\nexport default AllQuotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"sources":["C:/Users/Dhananjay srinivas/Desktop/REACT/Router-demo/src/pages/AllQuotes.js"],"names":["QuoteList","useHttp","getAllQuotes","useEffect","LoadingSpinner","DUMMY_QUOTES","id","author","text","AllQuotes","sendRequest","status","data","loadedQuotes","error"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,gCAAtB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AACA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,OAApB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CADmB,EAEnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,QAApB;AAA8BC,EAAAA,IAAI,EAAE;AAApC,CAFmB,EAGnB;AAAEF,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,MAAM,EAAE,OAApB;AAA6BC,EAAAA,IAAI,EAAE;AAAnC,CAHmB,CAArB;;AAKA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,YAHF;AAIJC,IAAAA;AAJI,MAKFb,OAAO,CAACC,YAAD,EAAe,IAAf,CALX;AAMAC,EAAAA,SAAS,CAAC,MACR;AACJO,IAAAA,WAAW;AACN,GAHM,EAGL,CAACA,WAAD,CAHK,CAAT;;AAIE,MAAGC,MAAM,KAAG,SAAZ,EACA;AACI,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AACD,MAAGG,KAAH,EAAS;AACL,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAIH,MAAM,KAAG,WAAb,EACF,oBAAO,QAAC,SAAD;AAAW,IAAA,MAAM,EAAEN;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAxBD;;GAAMI,S;UAMAR,O;;;KANAQ,S;AAyBN,eAAeA,SAAf","sourcesContent":["import QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport { getAllQuotes } from \"../components/lib/api\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Dhanu\", text: \"learning React is fun!\" },\r\n  { id: \"q2\", author: \"Chandu\", text: \"learning React is great!\" },\r\n  { id: \"q3\", author: \"Ullas\", text: \"learning React is love!\" },\r\n];\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n  useEffect(()=>\r\n    {\r\nsendRequest();\r\n    },[sendRequest]);\r\n    if(status==='pending')\r\n    {\r\n        return(\r\n            <div className=\"centered\">\r\n                <LoadingSpinner/>\r\n            </div>\r\n        )\r\n    }\r\n    if(error){\r\n        return <p className=\"centered focused\">{error}</p>\r\n    }\r\n    if (status==='completed')\r\n  return <QuoteList quotes={DUMMY_QUOTES} />;\r\n};\r\nexport default AllQuotes;\r\n"]},"metadata":{},"sourceType":"module"}