{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dhananjay srinivas\\\\Desktop\\\\REACT\\\\Router-demo\\\\src\\\\pages\\\\QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport HighlitedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../components/hooks/use-http\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { getSingleQuote } from \"../components/lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = () => {\n  _s();\n\n  const params = useParams();\n  const match = useRouteMatch();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === 'pending') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (!loadedQuotes.text) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Quote Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlitedQuote, {\n      text: loadedQuotes.text,\n      author: loadedQuotes.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: match.path,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `${match.url}/comments`,\n          children: [\" \", \"Comments\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuoteDetail, \"Gh5FkcHwFomO5X4V5WKQ3SEBKZM=\", false, function () {\n  return [useParams, useRouteMatch, useHttp];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["C:/Users/Dhananjay srinivas/Desktop/REACT/Router-demo/src/pages/QuoteDetail.js"],"names":["Fragment","useEffect","Link","Route","useParams","useRouteMatch","HighlitedQuote","Comments","useHttp","LoadingSpinner","getSingleQuote","QuoteDetail","params","match","quoteId","sendRequest","status","data","loadedQuotes","error","text","author","path","url"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,SAAtB,EAAgCC,aAAhC,QAAqD,kBAArD;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AAEA,SAASC,cAAT,QAA+B,uBAA/B;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,QAAMS,KAAK,GAAER,aAAa,EAA1B;AACA,QAAM;AAACS,IAAAA;AAAD,MAAYF,MAAlB;AACA,QAAM;AACJG,IAAAA,WADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,IAAI,EAAEC,YAHF;AAIJC,IAAAA;AAJI,MAKJX,OAAO,CAACE,cAAD,EAAgB,IAAhB,CALT;AAMAT,EAAAA,SAAS,CAAC,MACV;AACEc,IAAAA,WAAW,CAACD,OAAD,CAAX;AACD,GAHQ,EAGP,CAACC,WAAD,EAAcD,OAAd,CAHO,CAAT;;AAIA,MAAGE,MAAM,KAAG,SAAZ,EACA;AACI,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AACD,MAAGG,KAAH,EAAS;AACL,wBAAO;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA,gBAAiCA;AAAjC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,MAAI,CAACD,YAAY,CAACE,IAAlB,EAAuB;AACnB,wBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAN;AAEH;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAEF,YAAY,CAACE,IAAnC;AAAyC,MAAA,MAAM,EAAEF,YAAY,CAACG;AAA9D;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAER,KAAK,CAACS,IAAnB;AAAyB,MAAA,KAAK,MAA9B;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,WAAhB;AAA4B,UAAA,EAAE,EAAG,GAAET,KAAK,CAACU,GAAI,WAA7C;AAAA,qBACG,GADH,cAEW,GAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEV,KAAK,CAACS,IAAK,WAA3B;AAAA,6BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA/CD;;GAAMX,W;UACWP,S,EACFC,a,EAOXG,O;;;KATEG,W;AAgDN,eAAeA,WAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\r\nimport { Link, Route, useParams,useRouteMatch } from \"react-router-dom\";\r\nimport HighlitedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport useHttp from \"../components/hooks/use-http\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nimport { getSingleQuote } from \"../components/lib/api\";\r\nconst QuoteDetail = () => {\r\n  const params = useParams();\r\n  const match =useRouteMatch();\r\n  const {quoteId} = params;\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  }=useHttp(getSingleQuote,true);\r\n  useEffect(()=>\r\n  {\r\n    sendRequest(quoteId)\r\n  },[sendRequest, quoteId]);\r\n  if(status==='pending')\r\n  {\r\n      return(\r\n          <div className=\"centered\">\r\n              <LoadingSpinner/>\r\n          </div>\r\n      )\r\n  }\r\n  if(error){\r\n      return <p className=\"centered focused\">{error}</p>\r\n  }\r\n  if (!loadedQuotes.text){\r\n      return<p>No Quote Found</p>;\r\n\r\n  }\r\n  \r\n  return (\r\n    <Fragment>\r\n      <HighlitedQuote text={loadedQuotes.text} author={loadedQuotes.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            {\" \"}\r\n            Comments{\" \"}\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default QuoteDetail;\r\n"]},"metadata":{},"sourceType":"module"}